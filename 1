<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Multilingual Annotator</title>
  <style>
    body {
      margin: 0;
      font-family: Arial, sans-serif;
      display: flex;
      height: 100vh;
      overflow: hidden;
    }
    .sidebar {
      width: 220px;
      background: #f4f4f4;
      border-right: 1px solid #ccc;
      padding: 10px;
      box-sizing: border-box;
      overflow-y: auto;
    }
    .sidebar input.rename {
      width: 100%;
      border: none;
      background: transparent;
      font-weight: bold;
    }
    .main {
      flex: 1;
      display: flex;
      flex-direction: column;
    }
    .toolbar {
      padding: 10px;
      background: #eee;
      border-bottom: 1px solid #ccc;
    }
    .editor-container {
      flex: 1;
      display: flex;
      overflow: auto;
    }
    .column {
      flex: 1;
      padding: 10px;
      box-sizing: border-box;
      border-right: 1px solid #ccc;
      display: flex;
      flex-direction: column;
    }
    .column:last-child {
      border-right: none;
    }
    textarea {
      flex: 1;
      margin-top: 5px;
      resize: none;
    }
    button {
      margin-right: 5px;
    }
  </style>
</head>
<body>
  <div class="sidebar" id="sidebar">
    <button onclick="addNewSection()">+ New Entry</button>
  </div>
  <div class="main">
    <div class="toolbar">
      <button onclick="exportAll()">Export</button>
    </div>
    <div class="editor-container" id="editor">
    </div>
  </div>
  <script>
    let data = JSON.parse(localStorage.getItem('textEntries')) || [];

    function saveData() {
      localStorage.setItem('textEntries', JSON.stringify(data));
    }

    function addNewSection() {
      const newEntry = {
        title: `New Entry ${data.length + 1}`,
        en: '',
        zh: '',
        note: ''
      };
      data.push(newEntry);
      saveData();
      renderSidebar();
      renderEditor(data.length - 1);
    }

    function renderSidebar() {
      const sidebar = document.getElementById('sidebar');
      sidebar.innerHTML = '<button onclick="addNewSection()">+ New Entry</button>';
      data.forEach((entry, index) => {
        const input = document.createElement('input');
        input.className = 'rename';
        input.value = entry.title;
        input.onchange = () => {
          entry.title = input.value;
          saveData();
        };
        input.onclick = () => renderEditor(index);
        sidebar.appendChild(input);
      });
    }

    function renderEditor(index) {
      const container = document.getElementById('editor');
      container.innerHTML = '';
      const entry = data[index];

      const createColumn = (label, value, onInput) => {
        const column = document.createElement('div');
        column.className = 'column';

        const labelElem = document.createElement('strong');
        labelElem.innerText = label;
        column.appendChild(labelElem);

        const textArea = document.createElement('textarea');
        textArea.value = value;
        textArea.oninput = (e) => {
          onInput(e.target.value);
          saveData();
        };
        column.appendChild(textArea);

        return column;
      };

      container.appendChild(createColumn('English', entry.en, val => entry.en = val));
      container.appendChild(createColumn('Chinese', entry.zh, val => entry.zh = val));
      container.appendChild(createColumn('Notes', entry.note, val => entry.note = val));
    }

    function exportAll() {
      const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });
      const a = document.createElement('a');
      a.href = URL.createObjectURL(blob);
      a.download = 'multilang_entries.json';
      a.click();
    }

    // Initialize
    renderSidebar();
    if (data.length > 0) renderEditor(0);
  </script>
</body>
</html>
